openapi: 3.0.0
info:
  title: Spotplay
  description: 'Es una plataforma de musica y mas ...'
  contact:
    email: suport@spotplay.com
  license:
    name: Apache 2.0
    url: http://apache.org
  version: 1.0.0
servers:
- url: http://localhost:4000/api/v1
tags:
- name: Song
  description: canciones de la aplicacion
- name: Artist
  description: Artistas de la apliacion
- name: Genre
  description: Generos musicales de la apliacion
- name: Playlist
  description: playlist de los usuarios
- name: User
  description: usuarios de la plataforma
- name: Auth
  description: Autenticacion de los usuarios a la plataforma
components:
  schemas:
    Song:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        uri:
          type: string
        image: 
          type: string
        idArtist:
          type: integer
          format: int32
        idGenre:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
    Artist:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        avatar:
          type: string
        idGenre:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
    Genre:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: integer
          format: int32
    Playlist:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        image:
          type: string
        idUser:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        name:
          type: string
        email: 
          type: string
        password: 
          type: string
        avatar: 
          type: string
        idRole:
          type: integer
          format: int32
        idAccount:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
    Auth:
      type: object
      properties:
        username:
          type: string
        password: 
          type: string
    PlaylistSong:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idPlaylist:
          type: string
        idSong:
          type: string
paths:
  /song:
    post:
      tags:
      - Song
      summary: Crear una canción
      operantionId: createSong
      description: Se creara una cancion para registrar en la plataforma
      requestBody:
        description: Ingresar los datos de la canción a crear
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      responses:
        200:
          description: registro exitoso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
    get:
      tags:
      - Song
      summary: retorna todas las canciones registradas
      responses:
        200:
          description: todas las canciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
    put:
      tags:
      - Song
      summary: actualiza una cancion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      responses:
        200:
          description: Cancion actualizada
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
  /artist:
    post:
      tags:
      - Artist
      summary: Crear un artista
      operantionId: createArtist
      description: Se creara un artista
      requestBody:
        description: Ingresar los datos del artista
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
        required: true
      responses:
        200:
          description: registro exitoso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
    get:
      tags:
      - Artist
      summary: retorna todos los artistas
      responses:
        200:
          description: todos los artistas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
    put:
      tags:
      - Artist
      summary: actualiza a un artista
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
        required: true
      responses:
        200:
          description: Artista Actualizado
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
  /genre:
    post:
      tags:
      - Genre
      summary: Crear un genero musical
      operantionId: createGenre
      description: Se creara un nuevo genero musical
      requestBody:
        description: Ingresar los datos del gener
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
        required: true
      responses:
        200:
          description: registro exitoso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
    get:
      tags:
      - Genre
      summary: retorna todos los tipos de generos
      responses:
        200:
          description: todos los generos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genre'
    put:
      tags:
      - Genre
      summary: actualiza un genero musical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
        required: true
      responses:
        200:
          description: Genero actualizado
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
    delete:
      tags:
      - Genre
      summary: Elimina un genero musical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
        required: true
      responses:
        200:
          description: Genero actualizado
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
  /playlist:
    post:
      tags:
      - Playlist
      summary: Crear una playlist nueva
      operantionId: createPlaylist
      description: Se creara un nueva playlist
      requestBody:
        description: Ingresar los datos de la playlist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
        required: true
      responses:
        200:
          description: registro exitoso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
    get:
      tags:
      - Playlist
      summary: retorna todas las playlist
      responses:
        200:
          description: todos las playlist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Playlist'
    put:
      tags:
      - Playlist
      summary: Actualiza una playlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
        required: true
      responses:
        200:
          description: Playlist actualizada
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
  /user/signup:
    post:
      tags:
      - User
      summary: Crear un nuevo usuario
      operantionId: createUser
      description: Se creara un nueuvo usuario
      requestBody:
        description: Ingresar los datos del usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: registro exitoso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
  /auth/singin:
    post:
      tags:
      - Auth
      summary: Autentica un usuario
      operantionId: AuthUser
      description: Se autentica un usuario
      requestBody:
        description: Ingresar los datos de autenticacion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      responses:
        200:
          description: registro exitoso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
  /playlistsong:
    post:
      tags:
      - PlaylistSong
      summary: agregar una cancion a  una playlist
      operantionId: createPlaylistSong
      description: Se agrega una cancion a una playlist
      requestBody:
        description: Ingresar los datos de la cancion y de la playlist
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistSong'
        required: true
      responses:
        200:
          description: registro exitoso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistSong'
        400:
          description: bad request
          content: {}
        404:
          description: not found
          content: {}
    get:
      tags:
      - PlaylistSong
      summary: retorna los ids de las canciones y la playlist a la que pertenece
      responses:
        200:
          description: ids de canciones y playlist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaylistSong'